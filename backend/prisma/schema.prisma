// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


// ---------User Schema Defined------------
model User {
  id String @id @default(cuid())
  fname String 
  lname String
  full_name String?
  email String @unique
  mobile String @unique
  password String
  role Role 
  avater String
  refreshToken String? @db.LongText
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  requests Request[]
}

// ---------Role Enums Defined------------
enum Role {
  USER
  ADMIN
}


// ---------User Request model or schema Defined------------
model Request {
  id Int @id @default(autoincrement())
  expenditure String
  submitted_on String @default("--/--/----")
  amount_claimed Float
  amount_approved Float?
  receipt String? 
  approval_date String?
  status Status @default(Pending)
  user User @relation(fields: [uid], references: [id], onDelete: Cascade, onUpdate: Restrict)
  uid String 
}

// ---------Status Enums Defined------------
enum Status {
  Pending
  Approved
  Rejected
}


// ---------Many-to-Many relation model or schema defined------------
// model RequestOfUser {
//   user User @relation(fields: [userId], references: [id])
//   userId String
//   request Request @relation(fields: [reqId], references: [id], onDelete: Cascade, onUpdate: Restrict)
//   reqId Int
//   assignedAt DateTime? @default(now())
//   @@id([userId, reqId])
// }